package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.util.Range;
import com.qualcomm.hardware.rev.RevBlinkinLedDriver;
import com.qualcomm.robotcore.hardware.ColorSensor;

@TeleOp(name="XKartV2", group="Iterative Opmode")
public class XTeleopV2 extends OpMode
{
    // Declare OpMode members.
    private ElapsedTime runtime = new ElapsedTime();
    private XHardwareMap robot = new XHardwareMap();
    ColorSensor colorSensor = null;
    int status;
    /*
     * Code to run ONCE when the driver hits INIT
     */
    @Override
    public void init() {
        telemetry.addData("Status", "Initialized");
        robot.init(hardwareMap);
        //why this work I don't know nor care
         colorSensor = hardwareMap.get(ColorSensor.class, "colorSensor");
    }

    /*
     * Code to run REPEATEDLY after the driver hits INIT, but before they hit PLAY
     */
    @Override
    public void init_loop() {
    }

    
    @Override
    public void start() {
        runtime.reset();
    }

    
    @Override
    public void loop() {
        
        status = robot.status(colorSensor.red(),colorSensor.green(),colorSensor.blue());
        switch(status){
        case 0:
            robot.move(gamepad1.left_stick_y, gamepad1.left_stick_x, gamepad1.right_stick_x);
            break;
        case 1:
            robot.speedBuffer(gamepad1.left_stick_y, gamepad1.left_stick_x, gamepad1.right_stick_x);
            break;
        case 2:
            robot.oilSlick(gamepad1.left_stick_x,gamepad1.left_stick_y);
            break;
        case 3:
            robot.speedBoost(gamepad1.left_stick_y, gamepad1.left_stick_x, gamepad1.right_stick_x);
            break;
        case 4: 
            robot.bannana();
            break;
        }
        
        robot.colorToLights(status);
        
        telemetry.addData("status",status);
    
        
        
        
    }

    /*
     * Code to run ONCE after the driver hits STOP
     */
    @Override
    public void stop() {
    }

}