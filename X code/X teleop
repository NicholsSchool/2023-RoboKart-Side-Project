package org.firstinspires.ftc.robotcontroller.external.samples;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.util.Range;


@TeleOp(name="Basic: Iterative OpMode", group="Iterative Opmode")
public class BasicOpMode_Iterative extends OpMode
{
    // Declare OpMode members.
    private ElapsedTime runtime = new ElapsedTime();
    float currentSpeedX;
    float currentSpeedY;
    

    /*
     * Code to run ONCE when the driver hits INIT
     */
    @Override
    public void init() {
        telemetry.addData("Status", "Initialized");

    }

    /*
     * Code to run REPEATEDLY after the driver hits INIT, but before they hit PLAY
     */
    @Override
    public void init_loop() {
    }

    
    @Override
    public void start() {
        runtime.reset();
    }

    
    @Override
    public void loop() {
        public xMethods xM = new xMethods();
        
        float x1 = gamepad1.left_stick_x
        float x2 = gamepad1.right_stick_x;
        float input = gamepad1.left_trigger - gamepad1.right_trigger;
        if(runtime.seconds() > 0.1){
            currentSpeedX = currentSpeedX + input * xC.getAcceleration();
            currentSpeedY = currentSpeedX + input * xC.getAcceleration();
        }
        
        xM.Move(x1, currentSpeedY, x2, currentSpeedX)

        


        
       


    }

    /*
     * Code to run ONCE after the driver hits STOP
     */
    @Override
    public void stop() {
    }

}
